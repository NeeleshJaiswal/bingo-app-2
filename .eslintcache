[{"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/reportWebVitals.js":"1","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/App.js":"2","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/bingo.js":"3","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/confetti.js":"4","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/tile.js":"5","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/context/winner.context.js":"6","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/utilities/data-util.js":"7","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/score.js":"8","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/index.js":"9"},{"size":362,"mtime":1612194223905,"results":"10","hashOfConfig":"11"},{"size":273,"mtime":1612198685084,"results":"12","hashOfConfig":"11"},{"size":2550,"mtime":1612206597034,"results":"13","hashOfConfig":"11"},{"size":557,"mtime":1612207033156,"results":"14","hashOfConfig":"11"},{"size":647,"mtime":1612202443120,"results":"15","hashOfConfig":"11"},{"size":302,"mtime":1612198470009,"results":"16","hashOfConfig":"11"},{"size":748,"mtime":1612196294784,"results":"17","hashOfConfig":"11"},{"size":660,"mtime":1612207764399,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1612194223903,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1by8rj2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/reportWebVitals.js",[],["44","45"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/App.js",[],["46","47"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/bingo.js",["48"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/confetti.js",[],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/tile.js",["49"],"import clsx from \"clsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { WinnerContext } from \"../context/winner.context\";\n\nfunction Tile({ id, children, onToggle, isSet }) {\n  const { winner } = useContext(WinnerContext);\n\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    if (winner.includes(parseInt(id))) {\n      setFlag(true);\n    } else {\n      setFlag(false);\n    }\n  }, [winner]);\n\n  return (\n    <div\n      onClick={onToggle}\n      className={clsx(\n        `tile ${isSet ? \"tile--set\" : \"\"}`,\n        flag && \"highlighted\"\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Tile;\n","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/context/winner.context.js",[],["50","51"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/utilities/data-util.js",[],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/score.js",["52"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { WinnerContext } from \"../context/winner.context\";\nimport ConfettiComponent from \"./confetti\";\n\n\nfunction Score() {\n  const { winner } = useContext(WinnerContext);\n  const [score, setScore] = useState(0);\n  const [confetti, setConfetti] = useState(false);\n\n  useEffect(() => {\n    winner.length * 2 > score && setConfetti(true);\n    confetti && setTimeout(() => {setConfetti(false);}, 1000);\n    setScore(winner.length * 2);\n    \n  }, [winner]);\n\n  return (\n    <div>\n      <h5>YOUR SCORE IS {score}</h5>\n      {confetti && <ConfettiComponent />}\n    </div>\n  );\n}\n\nexport default Score;\n","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/index.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":34,"column":10,"nodeType":"63","endLine":34,"endColumn":25,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":16,"column":6,"nodeType":"63","endLine":16,"endColumn":14,"suggestions":"66"},{"ruleId":"55","replacedBy":"67"},{"ruleId":"57","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":16,"column":6,"nodeType":"63","endLine":16,"endColumn":14,"suggestions":"70"},{"ruleId":"55","replacedBy":"71"},{"ruleId":"57","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setWinner'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["76"],["73"],["74"],"React Hook useEffect has missing dependencies: 'confetti' and 'score'. Either include them or remove the dependency array.",["77"],["73"],["74"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [setWinner, state.checked]",{"range":"84","text":"85"},"Update the dependencies array to be: [id, winner]",{"range":"86","text":"87"},"Update the dependencies array to be: [confetti, score, winner]",{"range":"88","text":"89"},[1019,1034],"[setWinner, state.checked]",[421,429],"[id, winner]",[507,515],"[confetti, score, winner]"]