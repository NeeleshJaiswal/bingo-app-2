[{"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/reportWebVitals.js":"1","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/App.js":"2","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/bingo.js":"3","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/confetti.js":"4","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/tile.js":"5","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/context/winner.context.js":"6","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/utilities/data-util.js":"7","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/score.js":"8","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/index.js":"9","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/services/winner-services.js":"10"},{"size":362,"mtime":1612194223905,"results":"11","hashOfConfig":"12"},{"size":273,"mtime":1612198685084,"results":"13","hashOfConfig":"12"},{"size":2124,"mtime":1612374279645,"results":"14","hashOfConfig":"12"},{"size":296,"mtime":1612286712449,"results":"15","hashOfConfig":"12"},{"size":881,"mtime":1612372704255,"results":"16","hashOfConfig":"12"},{"size":302,"mtime":1612198470009,"results":"17","hashOfConfig":"12"},{"size":899,"mtime":1612374296275,"results":"18","hashOfConfig":"12"},{"size":712,"mtime":1612290092890,"results":"19","hashOfConfig":"12"},{"size":500,"mtime":1612194223903,"results":"20","hashOfConfig":"12"},{"size":409,"mtime":1612371640758,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1by8rj2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/reportWebVitals.js",[],["48","49"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/App.js",[],["50","51"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/bingo.js",["52"],"import React, { useContext, useEffect, useState } from 'react'\nimport shuffle from \"shuffle-array\";\nimport { WinnerContext } from '../context/winner.context';\nimport { isWon } from '../services/winner-services';\nimport { dataArray, lines } from '../utilities/data-util';\n\nimport Score from './score';\nimport Tile from './tile';\n\nfunction Bingo() {\n    const [state, setState] = useState({ checked: {} });\n    const { setWinner } = useContext(WinnerContext);\n    const [data, setData] = useState(() => {\n        return shuffle(dataArray).reduce(\n            (data, value, index) => ({ ...data, [index]: value }),\n            {}\n          );\n    })\n\n    useEffect(() => {\n        let newArr = [];\n        for (let i = 0; i < lines.length; i++) {\n          const [a, b, c, d, e] = lines[i];\n          if (\n            state.checked[a] &&\n            state.checked[b] &&\n            state.checked[c] &&\n            state.checked[d] &&\n            state.checked[e]\n          ) {\n            newArr.push(a, b, c, d, e);\n          }\n        }\n        setWinner(newArr);\n      }, [state.checked]);\n \n  const toggle = id =>\n    setState(state => {\n      const checked = { ...state.checked, [id]: !state.checked[id] };\n      const won = isWon(checked);\n      return {\n        ...state,\n        checked,\n        won\n      };\n    });\n\n    const handleClick = () => {\n        setState({ checked: {} });\n        setWinner([]);\n        let newData = shuffle(dataArray).reduce(\n            (data, value, index) => ({ ...data, [index]: value }),\n            {}\n          );\n        setData(newData)\n    }\n\n  return (\n    <div className=\"bingo\">\n      <h1>Tech Bingo</h1>\n      <Score/>\n      <div className=\"wrapper\">\n        {Object.keys(data).map(id => (\n          \n          id < 25 && <Tile\n            data={data}\n            key={id}\n            id={id}\n            isSet={!!state.checked[id]}\n            onToggle={() => toggle(id)}\n          >\n            {data[id]}\n          </Tile> \n        ))}\n      </div>\n\n      <button className='reset-button' onClick={handleClick}>Reset Game</button>\n    </div>\n  );\n}\n\nexport default Bingo\n","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/confetti.js",[],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/tile.js",["53","54"],"import clsx from \"clsx\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { WinnerContext } from \"../context/winner.context\";\n\nfunction Tile({ data, id, children, onToggle, isSet }) {\n  const { winner } = useContext(WinnerContext);\n  const [flag, setFlag] = useState(false);\n  useEffect(() => {\n    if (id === \"12\") {\n      onToggle(id);\n    }\n  }, [id, data]);\n\n  useEffect(() => {\n    if (winner.includes(parseInt(id))) {\n      setFlag(true);\n    } else {\n      setFlag(false);\n    }\n  }, [winner]);\n\n  const handleClick = (id) => {\n\n    if (id === \"12\") {\n      return;\n    }\n    onToggle(id);\n  };\n  return (\n    <div\n      onClick={() => handleClick(id)}\n      className={clsx(\n        `tile ${isSet ? \"tile-active\" : \"\"}`,\n        flag && \"highlighted\", id === '12' && 'free-slot'\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Tile;\n","/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/context/winner.context.js",[],["55","56"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/utilities/data-util.js",[],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/views/score.js",["57","58"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/index.js",[],["59","60"],"/Users/aafreenkhan/Documents/workspace/bingo-app-2/src/services/winner-services.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":35,"column":10,"nodeType":"69","endLine":35,"endColumn":25,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":12,"column":6,"nodeType":"69","endLine":12,"endColumn":16,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":20,"column":6,"nodeType":"69","endLine":20,"endColumn":14,"suggestions":"74"},{"ruleId":"61","replacedBy":"75"},{"ruleId":"63","replacedBy":"76"},{"ruleId":"67","severity":1,"message":"77","line":13,"column":6,"nodeType":"69","endLine":13,"endColumn":14,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":20,"column":6,"nodeType":"69","endLine":20,"endColumn":13,"suggestions":"80"},{"ruleId":"61","replacedBy":"81"},{"ruleId":"63","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],["83"],["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setWinner'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'onToggle'. Either include it or remove the dependency array. If 'onToggle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["86"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["87"],["83"],["84"],"React Hook useEffect has a missing dependency: 'score'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has a missing dependency: 'confetti'. Either include it or remove the dependency array.",["89"],["83"],["84"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [setWinner, state.checked]",{"range":"100","text":"101"},"Update the dependencies array to be: [id, data, onToggle]",{"range":"102","text":"103"},"Update the dependencies array to be: [id, winner]",{"range":"104","text":"105"},"Update the dependencies array to be: [score, winner]",{"range":"106","text":"107"},"Update the dependencies array to be: [confetti, score]",{"range":"108","text":"109"},[1072,1087],"[setWinner, state.checked]",[371,381],"[id, data, onToggle]",[513,521],"[id, winner]",[438,446],"[score, winner]",[560,567],"[confetti, score]"]